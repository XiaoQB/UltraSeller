version: "3"
services:

  us-gateway-service:
    build: us-gateway-service
    ports:
      - "8000:8000"
    networks:
      - us-service-net

  us-user-service:
    build: us-user-service
    depends_on:
      - us-mysql-user
    environment:
      USERNAME: root
      PASSWORD: root
      DB_URL: us-mysql-user:3309/ultra_seller_user
    ports:
      - "8001:8001"
    networks:
      - us-service-net

  us-commodity-service:
    build: us-commodity-service
    depends_on:
      - us-mysql-commodity
    environment:
      USERNAME: root
      PASSWORD: root
      DB_URL: us-mysql-commodity:3306/ultra_seller_commodity
    ports:
      - "8002:8002"
    networks:
      - us-service-net

  us-wallet-service:
    build: us-wallet-service
    depends_on:
      - us-mysql-wallet
    environment:
      USERNAME: root
      PASSWORD: root
      DB_URL: us-mysql-wallet:3310/ultra_seller_wallet
    ports:
      - "8003:8003"
    networks:
      - us-service-net

  us-order-service:
    build: us-order-service
    depends_on:
      - us-mysql-order
    environment:
      USERNAME: root
      PASSWORD: root
      DB_URL: us-mysql-order:3307/ultra_seller_order
    ports:
      - "8004:8004"
    networks:
      - us-service-net

#  us-cart-service:
#    build: us-cart-service
#    depends_on:
#      - us-mysql-shopcar
#    environment:
#      USERNAME: root
#      PASSWORD: root
##      DB_URL: us-mysql-shopcar:3308/ultra_seller_shopcar
#      DB_URL: 47.102.97.229:3306/ultra_seller
#    ports:
#      - "8012:8012"
#    networks:
#      - us-service-net

  ui-service:
    build: ui-service
    depends_on:
      - us-gateway-service
    image: nginx:latest
    restart: always
    volumes:
      - './ui-service/dist:/usr/share/nginx/html'
      - './ui-service/default.conf:/etc/nginx/conf.d/default.conf'
    ports:
      - '8080:80'
    networks:
      - us-service-net

#  nacos:
#    image: nacos/nacos-server:1.2.1
#    container_name: nacos
#    restart: always
#    depends_on:
#      - us-mysql-nacos
#    environment:
#      PREFER_HOST_MODE: hostname #如果支持主机名可以使用hostname,否则使用ip，默认也是ip
#      SPRING_DATASOURCE_PLATFORM: mysql #数据源平台 仅支持mysql或不保存empty
#      MODE: standalone
#      MYSQL_SERVICE_HOST: mysql5.7
#      MYSQL_SERVICE_DB_NAME: nacos
#      MYSQL_SERVICE_PORT: 3306
#      MYSQL_SERVICE_USER: root
#      MYSQL_SERVICE_PASSWORD: root
#      NACOS_APPLICATION_PORT: 9999
#      JVM_XMS: 512m
#      JVM_MMS: 320m
#    volumes:
#      - ./docker/nacos/standalone-logs/:/home/nacos/logs
#      - ./docker/nacos/plugins/:/home/nacos/plugins
#      - ./docker/nacos/conf/application.yml:/home/nacos/conf/application.yml
#    ports:
#      - "9999:9999"

#  us-mysql-nacos:
#    build: us-mysql-nacos/
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#    ports:
#      - 53306:3306
#    networks:
#      - us-service-net

# Databases
  us-mysql-commodity:
    image: docker.io/mysql/mysql-server:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - './us-mysql/us-mysql-commodity.sql:/docker-entrypoint-initdb.d/'
    ports:
      - 53306:3306
    networks:
      - us-service-net

  us-mysql-order:
    image: docker.io/mysql/mysql-server:5.7
    environment:
        MYSQL_ROOT_PASSWORD: root
    volumes:
        - './us-mysql/us-mysql-order.sql:/docker-entrypoint-initdb.d/'
    ports:
      - 53307:3307
    networks:
      - us-service-net

#  us-mysql-shopcar:
#    build: us-mysql-shopcar/
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#    ports:
#      - 53308:3308
#    networks:
#      - us-service-net

  us-mysql-user:
    image: docker.io/mysql/mysql-server:5.7
    environment:
        MYSQL_ROOT_PASSWORD: root
    volumes:
        - './us-mysql/us-mysql-user.sql:/docker-entrypoint-initdb.d/'
    ports:
      - 53309:3309
    networks:
      - us-service-net

  us-mysql-wallet:
    image: docker.io/mysql/mysql-server:5.7
    environment:
        MYSQL_ROOT_PASSWORD: root
    volumes:
        - './us-mysql/us-mysql-wallet.sql:/docker-entrypoint-initdb.d/'
    ports:
      - 53310:3310
    networks:
      - us-service-net
networks:
  us-service-net: {}