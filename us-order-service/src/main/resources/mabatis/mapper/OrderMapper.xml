<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="order.dao.OrderDao">

    <resultMap id="order" type="cn.edu.fudan.common.entities.dbo.Order">
        <id property="orderId" column="id"/>
        <result property="status" column="status"/>
        <result property="totalPrice" column="total_price"/>
        <result property="address" column="address"/>
        <result property="buyerId" column="buyer_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="subOrder" type="cn.edu.fudan.common.entities.dbo.SubOrder">
        <id property="subOrderId" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="status" column="status"/>
        <result property="totalPrice" column="totasubl_price"/>
        <result property="address" column="address"/>
        <result property="salerId" column="saler_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="commodityName" column="commodity_name"/>
        <result property="commodityId" column="commodity_id"/>
        <result property="price" column="price"/>
        <result property="num" column="num"/>
    </resultMap>

    <sql id="order_all_columns">
        id, status, total_price, address, buyer_id, create_time, update_time
    </sql>

    <sql id="sub_order_all_columns">
        id, order_id, status, total_price, address, saler_id, create_time, update_time, commodity_name, commodity_id, price, num
    </sql>

    <insert id="createOrder" parameterType="cn.edu.fudan.common.entities.dbo.Order">
        insert into `order` (id, status, total_price, address, buyer_id, create_time, update_time)
            value (
                   #{orderId},
                   #{status},
                   #{totalPrice},
                   #{address},
                   #{buyerId},
                   #{createTime},
                   #{updateTime}
            )
    </insert>

    <select id="getOrderById" resultMap="order">
        select
        <include refid="order_all_columns"/>
        from `order`
        where id = #{orderId}
    </select>

    <update id="changeOrder" parameterType="cn.edu.fudan.common.entities.dbo.Order">
        update `order`
        <set>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
        </set>
        where id = #{orderId}
    </update>

    <update id="changeSubOrder" parameterType="cn.edu.fudan.common.entities.dbo.SubOrder">
        update `sub_order`
        <set>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
        </set>
        where id = #{subOrderId}
    </update>

    <select id="getOrdersByUser" resultMap="order">
        select
        <include refid="order_all_columns"/>
        from `order`
        <where>
            <if test="userIds != null and userIds.size > 0">
                buyer_id in
                <foreach collection="userIds" item="userId" separator="," open="(" close=")">
                    #{userId}
                </foreach>
            </if>
        </where>
        limit #{page},#{num}
    </select>

    <select id="getSubOrdersByUser" resultMap="subOrder">
        select
        <include refid="sub_order_all_columns"/>
        from `sub_order`
        <where>
            <if test="userIds != null and userIds.size > 0">
                saler_id in
                <foreach collection="userIds" item="userId" separator="," open="(" close=")">
                    #{userId}
                </foreach>
            </if>
        </where>
        limit #{page},#{num}
    </select>
    <select id="getSalerOrderListByStatus" resultMap="subOrder">
        select *
        from ultra_seller.sub_order
        where status = #{status}
          and saler_id = #{userId}
        limit #{page},#{num}
    </select>
    <select id="getBuyerOrdersByStatus" resultMap="order">
        select *
        from ultra_seller.`order`
        where status = #{status}
          and buyer_id = #{userId}
        limit #{page},#{num}
    </select>
    <select id="getSubOrderDetailById" resultMap="subOrder"
            parameterType="java.lang.String">
        select
        <include refid="sub_order_all_columns"/>
        from `sub_order`
        where id = #{subOrderId}
    </select>

</mapper>
